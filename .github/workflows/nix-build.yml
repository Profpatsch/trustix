name: nix-build

on:
  pull_request:
  push:
    branches: master

jobs:

  matrix_generate:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - id: set-matrix
        run: |
          set -euo pipefail
          matrix="$(nix-instantiate --eval --json --expr 'builtins.attrNames (import ./. {})' | jq -rcM '{attr: ., os: ["ubuntu-latest"]}')"
          echo "::set-output name=matrix::$matrix"

  builds:
    needs: matrix_generate
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.matrix_generate.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v10
        with:
          name: nix-community
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - run: nix-shell --run 'nix-build-uncached -build-flags "-L" --keep-going --show-trace ./. -A ${{ matrix.attr }}'
