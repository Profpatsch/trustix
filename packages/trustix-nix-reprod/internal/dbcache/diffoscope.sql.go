// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: diffoscope.sql

package dbcache

import (
	"context"
)

const createDiffoscope = `-- name: CreateDiffoscope :one
INSERT OR REPLACE INTO
  diffoscope(key, html)
VALUES
  (?, ?) RETURNING "key", html
`

type CreateDiffoscopeParams struct {
	Key  string
	Html []byte
}

func (q *Queries) CreateDiffoscope(ctx context.Context, arg CreateDiffoscopeParams) (Diffoscope, error) {
	row := q.db.QueryRowContext(ctx, createDiffoscope, arg.Key, arg.Html)
	var i Diffoscope
	err := row.Scan(&i.Key, &i.Html)
	return i, err
}

const getDiffoscopeHTML = `-- name: GetDiffoscopeHTML :one
SELECT
  html
FROM
  diffoscope
WHERE
  key = ?
LIMIT
  1
`

func (q *Queries) GetDiffoscopeHTML(ctx context.Context, key string) ([]byte, error) {
	row := q.db.QueryRowContext(ctx, getDiffoscopeHTML, key)
	var html []byte
	err := row.Scan(&html)
	return html, err
}
